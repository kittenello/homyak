from aiogram import Bot
from aiogram.types import User, FSInputFile
from datetime import datetime
from ..database.money import get_money
from ..config import HOMYAK_FILES_DIR, ADMIN_CHAT_ID
import logging

logger = logging.getLogger(__name__)

async def notify_new_user(bot: Bot, user: User):
    full_name = f"{user.first_name or ''} {user.last_name or ''}".strip() or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    username = f"@{user.username}" if user.username else "–Ω–µ—Ç"
    text = (
        f"üÜï –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!\n"
        f"ID: {user.id}\n"
        f"–ò–º—è: {full_name}\n"
        f"–Æ–∑–µ—Ä–Ω–µ–π–º: {username}"
    )
    try:
        await bot.send_message(chat_id=ADMIN_CHAT_ID, text=text)
    except Exception as e:
        logger.error(f"cant send log found new user: {e}")

async def notify_homyak_found(bot: Bot, user: User, homyak_name: str, chat_type: str):
    full_name = f"{user.first_name or ''} {user.last_name or ''}".strip() or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    username = f"@{user.username}" if user.username else "–Ω–µ—Ç"
    
    text = (
        f"üêπ –í—ã–ø–∞–¥–µ–Ω–∏–µ —Ö–æ–º—è–∫–∞\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {full_name} ({username})\n"
        f"ID: {user.id}\n"
        f"–•–æ–º—è–∫: {homyak_name} (–†–µ–¥–∫–æ—Å—Ç—å: \n"
        f"–ò—Å—Ç–æ—á–Ω–∏–∫: {chat_type}"
    )
    
    filename = f"{homyak_name}.png"
    file_path = HOMYAK_FILES_DIR / filename

    try:
        if file_path.exists():
            await bot.send_photo(
                chat_id=ADMIN_CHAT_ID,
                photo=FSInputFile(file_path),
                caption=text
            )
        else:
            await bot.send_message(chat_id=ADMIN_CHAT_ID, text=text)
    except Exception as e:
        logger.error(f"cant send log found homyak: {e}")

async def notify_promo_used(bot, user_id, username, full_name, promo_code, reward_type, reward_value, creator_id, remaining_uses):
    reward_names = {
        1: "–û—á–∫–∏",
        2: "–•–æ–º—è–∫",
        3: "–°–Ω—è—Ç–∏–µ –ö–î",
        4: "–ú–Ω–æ–∂–∏—Ç–µ–ª—å –æ—á–∫–æ–≤",
        5: "–ú–æ–Ω–µ—Ç—ã"
    }
    reward_text = reward_names.get(reward_type, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    if reward_type == 1:
        reward_text += f" ({reward_value} –æ—á–∫–æ–≤)"
    elif reward_type == 2:
        reward_text += f" ({reward_value})"
    elif reward_type == 4:
        reward_text += f" (+{reward_value} –æ—á–∫–æ–≤)"
    elif reward_type == 5:
        reward_text += f" (+{reward_value} –º–æ–Ω–µ—Ç)"

    text = (
        f"üéüÔ∏è <b>–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞</b>\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {full_name} (@{username})\n"
        f"üÜî ID: {user_id}\n"
        f"üé´ –ü—Ä–æ–º–æ–∫–æ–¥: {promo_code}\n"
        f"üéÅ –í—ã–¥–∞–ª–æ—Å—å: {reward_text}\n"
        f"üîÑ –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: {remaining_uses}\n"
        f"üõ†Ô∏è –°–æ–∑–¥–∞–ª: {creator_id} (ID)"
    )
    try:
        await bot.send_message(chat_id=ADMIN_CHAT_ID, text=text, parse_mode="HTML")
    except Exception as e:
        logger.error(f"cant send log promo:  {e}")

async def casino_log(
    bot: Bot,
    user: User,
    bet_amount: int,
    game_type: str,
    win_amount: int,
    result: str,
    user_choice: str,
    game_result: str,
    balance_before: int,
    from_chat_id: int = None,
    dice_message_id: int = None
):

    balance_after = balance_before + win_amount
    if from_chat_id is not None and dice_message_id is not None:
        try:
            forwarded_msg = await bot.forward_message(
                chat_id=ADMIN_CHAT_ID,
                from_chat_id=from_chat_id,
                message_id=dice_message_id,
                message_thread_id=5899
            )
            reply_to_id = forwarded_msg.message_id
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–º–∞–π–ª–∏–∫: {e}")
            reply_to_id = None

    username = f"@{user.username}" if user.username else "–Ω–µ—Ç"
    full_name = f"{user.first_name or ''} {user.last_name or ''}".strip() or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    user_id = user.id

    balance_before = await get_money(user_id)
    balance_after = balance_before + win_amount

    log_text = (
        f"üìù –ö–∞–∑–∏–Ω–æ\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {full_name} ({username})\n"
        f"ID: {user_id}\n"
        f"‚ùó–¢–∏–ø –∏–≥—Ä—ã: {game_type}\n"
        f"–°—Ç–∞–≤–∫–∞: {bet_amount:,} –º–æ–Ω–µ—Ç\n"
        f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}\n"
        f"‚ùó–í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_choice}\n"
        f"‚ÄºÔ∏è–†–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã: {game_result}\n"
        f"–í—ã–∏–≥—Ä—ã—à/–ü—Ä–æ–∏–≥—Ä—ã—à: {win_amount:,} –º–æ–Ω–µ—Ç\n"
        f"–ë–∞–ª–∞–Ω—Å –¥–æ –∏–≥—Ä—ã: {balance_before:,} –º–æ–Ω–µ—Ç\n"
        f"–ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –∏–≥—Ä—ã: {balance_after:,} –º–æ–Ω–µ—Ç\n"
    )

    try:
        if 'reply_to_id' in locals():
            await bot.send_message(
                chat_id=ADMIN_CHAT_ID,
                text=log_text,
                parse_mode="HTML",
                message_thread_id=5899,
                reply_to_message_id=reply_to_id
            )
        else:
            await bot.send_message(
                chat_id=ADMIN_CHAT_ID,
                text=log_text,
                parse_mode="HTML",
                message_thread_id=5899
            )
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥ –∫–∞–∑–∏–Ω–æ: {e}")