from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, ChatMemberUpdated
from aiogram.handlers import ChatMemberHandler
from aiogram.filters import Command
from ..database.bonus import set_bonus, get_bonus, remove_bonus
from ..config import BONUS_CHANNEL_ID, CHANNEL_ID_BONUS
from ..database.premium import is_premium_active
from ..config import ADMIN_CHAT_ID
import logging

logger = logging.getLogger(__name__)


router = Router()

@router.message(Command("bonus"))
async def cmd_bonus(message: Message):
    if message.chat.type != "private":
        bot_link = "https://t.me/homyakadventbot?start=bonus"
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞", url=bot_link)]
        ])
        await message.answer(
            "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º.",
            reply_markup=keyboard,
            reply_to_message_id=message.message_id
        )
        return

    await show_bonus_menu(message)

async def show_bonus_menu(message: Message):
    bonus_info = await get_bonus(message.from_user.id)
    if bonus_info and bonus_info.get("is_active"):
        await message.answer("‚úÖ –£ –≤–∞—Å —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –±–æ–Ω—É—Å—ã!")
        return

    subscribe_url = "https://t.me/homyakadventcl"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=subscribe_url)],
        [InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_bonus")]
    ])
    await message.answer(
        "üìí <b>–ó–∞–¥–∞–Ω–∏—è</b>\n"
        "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å:",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

@router.callback_query(F.data == "check_bonus")
async def check_bonus(callback_query):
    user_id = callback_query.from_user.id
    user = callback_query.from_user
    full_name = f"{user.first_name or ''} {user.last_name or ''}".strip() or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    username = f"@{user.username}" if user.username else f"ID {user_id}"

    try:
        member = await callback_query.bot.get_chat_member(BONUS_CHANNEL_ID, user_id)
        if member.status in ["member", "administrator", "creator"]:
            log_subscribe = (
                f"üîî <b>–ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞</b>\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {full_name} ({username})\n"
                f"üÜî ID: {user_id}\n"
                f"üì¢ –ö–∞–Ω–∞–ª: {BONUS_CHANNEL_ID}"
            )
            await callback_query.bot.send_message(ADMIN_CHAT_ID, log_subscribe, parse_mode="HTML")

            is_premium = await is_premium_active(user_id)
            await set_bonus(user_id, is_premium=is_premium)

            bonus_type = "Premium" if is_premium else "–û–±—ã—á–Ω—ã–π"
            log_bonus = (
                f"üéÅ <b>–ë–æ–Ω—É—Å—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã</b>\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {full_name} ({username})\n"
                f"üÜî ID: {user_id}\n"
                f"üíé –¢–∏–ø –±–æ–Ω—É—Å–∞: {bonus_type}"
            )
            await callback_query.bot.send_message(ADMIN_CHAT_ID, log_bonus, parse_mode="HTML")

            await callback_query.message.edit_text(
                "‚úÖ –ë–æ–Ω—É—Å—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã!\n"
                "–í–∞–º –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ (–Ω–∞–≤—Å–µ–≥–¥–∞):\n\n"
                "–ö–¥ 6 —á–∞—Å–æ–≤ –≤–º–µ—Å—Ç–æ 7 —á–∞—Å–∞(–ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ Premium - 4 —á–∞—Å–æ–≤ –≤–º–µ—Å—Ç–æ 5)\n"
                "+500 –æ—á–∫–æ–≤ —Å –∫–∞–∂–¥–æ–≥–æ —Ö–æ–º—è–∫–∞(–ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ Premium - +700 –æ—á–∫–æ–≤)"
            )
        else:
            await callback_query.answer("‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª", show_alert=True)
    except Exception as e:
        logger.error(f"check error sub: {e}")
        await callback_query.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏", show_alert=True)

@router.chat_member()
@router.my_chat_member()
class HandleUserLeave(ChatMemberHandler):
    async def handle(self) -> None:
        event: ChatMemberUpdated = self.event
        user_id = event.from_user.id
        
        logger.info(f"{event.from_user.id} –Ω–æ–≤–æ–µ {event.new_chat_member.status}")
        
        logger.info(f"{event.chat.id} {CHANNEL_ID_BONUS}")

        if event.chat.id == CHANNEL_ID_BONUS:
            if event.new_chat_member.status == "left":

                bonus_info = await get_bonus(user_id)
                if bonus_info and bonus_info.get("is_active"):

                    try:
                        await remove_bonus(user_id)
                    except Exception as e:
                        logger.error(f"–æ—à–∏–±–∫–∞ 113 bonus.py {e}")
                        subscribe_url = "https://t.me/homyakadventcl"
                        markup_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                        [InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=subscribe_url)],
                    ])
                    try:
                        await self.event.bot.send_message(
                            user_id,
                            "‚ùå –ü—Ä–æ–±–ª–µ–º–∞!\n\nüò≠ –í—ã –≤—ã—à–ª–∏ –∏–∑ –∫–∞–Ω–∞–ª–∞, –∏ –ø–æ—ç—Ç–æ–º—É –≤–∞—à–∏ –±–æ–Ω—É—Å—ã –±—ã–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–µ–Ω—ã.\nü§î –ù–æ –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏—Ö –≤–µ—Ä–Ω—É—Ç—å - –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∑–∞–Ω–æ–≤–æ –Ω–∞ –∫–∞–Ω–∞–ª –∏ –Ω–µ –æ—Ç–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å.",
                            reply_markup=markup_keyboard
                        )
                    except Exception as e:
                        logger.error(f"error to send message userid {e}")

            full_name = f"{event.from_user.first_name or ''} {event.from_user.last_name or ''}".strip() or "–ë–µ–∑ –∏–º–µ–Ω–∏"
            username = f"@{event.from_user.username}" if event.from_user.username else f"ID {user_id}"
            bonus_info = await get_bonus(user_id)
            if bonus_info and bonus_info.get("is_active"):
                log_leave = (
                    f"üéÅ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞\n"
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {full_name} ({username})\n"
                    f"üÜî ID: {user_id}\n"
                    f"üì¢ –ö–∞–Ω–∞–ª: {CHANNEL_ID_BONUS}\n"
                    f"‚ùå –ü—Ä–∏—á–∏–Ω–∞: –æ—Ç–ø–∏—Å–∫–∞ –æ—Ç –∫–∞–Ω–∞–ª–∞ (@homyakadventcl)"
                )
                try:
                    await self.event.bot.send_message(ADMIN_CHAT_ID, log_leave, parse_mode="HTML")
                except Exception as e:
                    logger.error(f"error {e}")