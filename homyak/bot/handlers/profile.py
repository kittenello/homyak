from html import escape
from datetime import datetime
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message

from ..database.premium import get_premium
from ..database.scores import get_score
from ..database.cards import get_user_cards, get_total_cards_count
from ..database.admins import is_admin

router = Router()


@router.message(Command("profile"))
async def cmd_profile(message: Message):
    user = message.from_user
    user_id = user.id

    # üõ° –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∏–º—è –¥–ª—è HTML parse_mode
    raw_name = user.full_name or user.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    name = escape(raw_name)

    # --- Premium ---
    premium_text = ""
    premium = await get_premium(user_id)
    if premium:
        if premium.get("is_lifetime"):
            premium_text = "\nüëë Premium: –Ω–∞–≤—Å–µ–≥–¥–∞"
        elif premium.get("expires_at"):
            try:
                expires_date = datetime.fromisoformat(premium["expires_at"]).strftime("%d.%m.%Y")
                premium_text = f"\nüëë Premium –¥–æ: {escape(expires_date)}"
            except Exception:
                pass

    # --- –û—á–∫–∏ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–º—è–∫ ---
    total_score = 0
    last_homyak = None
    try:
        result = await get_score(user_id)
        if isinstance(result, (tuple, list)) and len(result) >= 2:
            total_score, last_homyak = result
        elif isinstance(result, dict):
            total_score = result.get("total_score", 0)
            last_homyak = result.get("last_homyak")
    except Exception:
        pass

    total_score = total_score or 0
    last_homyak_text = escape(last_homyak) if last_homyak else "–µ—â—ë –Ω–µ –±—ã–ª–æ"

    # --- –ö–∞—Ä—Ç–æ—á–∫–∏ ---
    try:
        user_cards = await get_user_cards(user_id)
        opened_cards = len(user_cards)
    except Exception:
        opened_cards = 0

    try:
        total_cards = await get_total_cards_count()
    except Exception:
        total_cards = 0

    # --- –ê–¥–º–∏–Ω ---
    admin_status = ""
    try:
        if await is_admin(user_id):
            admin_status = "üîß <i>–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</i>"
    except Exception:
        pass

    # --- –ü–æ–ª—É—á–∞–µ–º –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
    photo_file_id = None
    try:
        photos = await message.bot.get_user_profile_photos(user_id, limit=1)
        if photos.photos:
            # –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ (—Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ) —Ñ–æ—Ç–æ
            photo_file_id = photos.photos[0][-1].file_id
    except Exception:
        pass

    # --- –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è ---
    text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {name}!{premium_text}\n\n"
        f"‚ú® –û—á–∫–∏: {total_score:,}\n"
        f"üÉè –ö–∞—Ä—Ç–æ—á–µ–∫: {opened_cards} / {total_cards}\n"
        f"üêπ –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–º—è–∫: {last_homyak_text}\n"
        f"üéÅ –û—Ç–∫—Ä—ã–≤–∞–π —Ö–æ–º—è–∫–æ–≤ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ —Å–æ–±–∏—Ä–∞–π —Å–≤–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é!\n\n"
        f"{admin_status}"
    )

    # --- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ ---
    if photo_file_id:
        await message.answer_photo(photo=photo_file_id, caption=text)
    else:
        await message.answer(text)
